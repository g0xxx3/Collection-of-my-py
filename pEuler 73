from time import time, sleep
from fractions import Fraction
itime = time()

def sieve(n):
    p = [5]
    i = 5
    while i < n - 2:
        #i += 2
        p += [i+2]
        i += 6
        p += [i]
    #p = (i+j for i in range(3, n, 6) for j in (2,4))
    sqrtN = int(n**0.5)+1
    pr = []
    yield 2
    yield 3

    for i in p:
        for j in pr:
            if not i%j:
                i = 0
                break
        if i:
            if i<sqrtN:
                pr += [i]
            yield i
            
#siev = list(sieve(2))
#print(len(siev), siev[-10:])
#print(len(set(range(1000001))- set(siev)))
z = 12001
c = 0
for d in range(2,z):
    for n in range(d//3+1, d//2+1):
        if Fraction(n, d).numerator == n:
            #print(d, n)
            c += 1 
        #if Fraction(n, d) < Fraction(1, 2) and Fraction(n, d) > Fraction(1,3):
                    
print(c-1)


            
print(time()-itime)
