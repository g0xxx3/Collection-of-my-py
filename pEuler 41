from time import time
print("STARTING...\n")
st = time()

'''
Problem 41
We shall say that an n-digit number is pandigital if it makes use of all the
digits 1 to n exactly once. For example, 2143 is a 4-digit pandigital and
is also prime.
What is the largest n-digit pandigital prime that exists?
'''
def isMiller(n):
    if not n%2 or not n%3:
        #print("divisible by ", 2, 3)
        return 0
    d = n - 1
    s = 0
    while not d % 2:
        d = d //2
        s += 1
        for a in [2,3]:
            if a**d%n == 1:
                continue
            for r in range(s):
                if a**((2**(r)) * d) % n == n - 1:
                    break
                elif r == s - 1:
                    return 0
    return n


from itertools import permutations
s = "123456789"
li = []
for i in range(2,10):
    sl = s[:i]
    if not sum(map(int, sl))%3:
        continue
    per = permutations(sl[::-1])
    print(sl)
    for j in per:
        j = "".join(j)
        if j[-1:] in ('2','4','6','8'):
            continue
        if isMiller(int(j)):
            li += [j]
            break

print(li[-1:])
























print("\nTHE_END: ",time() - st)
