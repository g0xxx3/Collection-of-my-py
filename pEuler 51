from time import time
st = time()

def sieve(n):
    p = [5]
    i = 5
    while i < n - 2:
        i += 2
        p += [i]
        i += 4
        p += [i]
    #p = (i+j for i in range(3, n, 6) for j in (2,4))
    sqrtN = int(n**0.5)+1
    pr = []
    #cont = [2,3]
    yield 2
    yield 3
    for i in p:
        for j in pr:
            if not i%j:
                i = 0
                break
        if i:
            if i<sqrtN:
                pr += [i]
            #cont += [i]
            yield i
     
def family(i,p):
    cod = -1
    d = 0
    x,y = str(i), str(p)
    for k in range(len(str(i))):
        if x[k] > y[k]:
            if cod == -1:
                cod = x[k]
                d = int(x[k])-int(y[k])
            elif not cod == x[k] or not d == int(x[k])-int(y[k]):
                return 0
        elif x[k]<y[k]:
            return 0
    
    return (i-p)/d
        


n = 1000000
def f(n):
    ans = {}
    for i in sieve(n):
        if i > 100000 and i < 1000000:
            for p in ans:
                cod = family(i,p)
                #print(i,p, cod)
                if cod:
                    if cod in ans[p]:
                        ans[p][cod] += 1
                        #print(ans[p][cod])
                        if ans[p][cod] > 6:
                            print(p,ans[p])
                            return
                    else :
                        ans[p][cod] = 1
            #print(ans)
            ans[i] = {}
        
f(n)
print(time() - st)

#Data str {prime:{cod: times}}
