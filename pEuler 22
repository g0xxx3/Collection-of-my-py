
n = 2200000000000

def sum_divisors(n, divisor):
    sqrtN = n**0.5    
    i = divisor
    t = 0
    while i <= sqrtN:
        if not n%i:
            divisor = i
            if i == n//i or i == 1:
                #print(i, n//i)
                t+= i
                break
            t += sum([i,n//i])
            #print(i, n//i)
            break 
        i += 1
    if i < sqrtN:
        divisor += 1
        t += sum_divisors(n, divisor)
    return t

def amic(n):
    t =0
    for i in range(n):
        if sum_divisors(sum_divisors(i,1), 1)== i:
            print(i)
            t+=i
    print(t)
    


def primeFactorize(n):
    li = []
    p = []
    i = 1
    while n > 1:
        i += 1
        if not n%i:
            n = n//i
            p += [i]
            li += [n]
            #print(li)
            
            i -= 1
    print(p)
    return p

def prod(t):
    t = list(t)
    #print(t)
    p = 1
    for i in t:
        p *= i
    return p

import itertools
i = itertools.combinations([1,2,3,4,5,6],4)
#print(list(i))

print('___________________%s__________________'%(time() - st))

su = sum_divisors(n, 1)
